<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Sen</title>
    <link>https://caiisen.github.io/posts/</link>
    <description>Recent content in Posts on Sen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Jun 2021 20:19:00 +0800</lastBuildDate><atom:link href="https://caiisen.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JCVI pipline</title>
      <link>https://caiisen.github.io/posts/my-first-post/</link>
      <pubDate>Sun, 27 Jun 2021 20:19:00 +0800</pubDate>
      
      <guid>https://caiisen.github.io/posts/my-first-post/</guid>
      <description>Prepare input data 准备输入文件  GFF cds  Format 对输入文件进行统一的格式化 convert GFF to BED 将GFF格式转换成BED格式 python3 -m jcvi.formats.gff bed --type=mRNA --key=Parent JamaicanLionDASH.gene.gff3.gz -o CsJLD.bed  formatting cds sequences python3 -m jcvi.formats.fasta format JamaicanLionDASH.cds.fasta.gz CsJLD.cds  Pairwise synteny search 搜索共线性对 python3 -m jcvi.compara.catalog ortholog CsFN CsPK --no_strip_names  此步骤会调用LAST以CsPK为subject建库,以CsFN为query做blastp。结果文件中.last是比对的全部结果，.last.filtered是过滤后的结果，但过滤的规则尚不清楚。同时生成的.anchors和.lifted.anchors文件格式尚不清楚。生成的.pdf文件绘制了CsFN和CsPK的共线性点图。
 若杂点太多可以通过添加--cscore=.99参数修改last的C-score过滤阈值，在此之前需删除旧的.last.filtered文件。
 Macrosynteny visualization 宏观共线性可视化 seqids and layout chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8 Pp01,Pp02,Pp03,Pp04,Pp05,Pp06,Pp07,Pp08  seqids文件是CsFN和CsPK中需要展示的染色体编号，编号的排列顺序与结果文件中染色体的排列顺序一致
 两个个体之间的染色体编号若有重复，可能导致在微观共线性可视化时产生错误。
 # y, xstart, xend, rotation, color, label, va, bed .</description>
    </item>
    
  </channel>
</rss>
